

BUG LOG
    (task)          || (files)
        - bugs
        
Checkpoint 1:

    1. load GDT     || boot.S
                    || x86_desc.S 

    2. init IDT     || idt_handlers.h/.c
                    || idt_interrupt_wrappers.h/.S
                    || idt.h/.c
                    || boot.S
        BUG: incorrect assembly linkage for interrupt handlers
                - control wasn't given back to the user after interrupts were called because we wrote the handlers in C, so there was no iret
                - SOLUTION      : wrote assembly wrappers in x86 and called a C handler inside of the assembly handler. We ended the assembly handler with an iret.
                                : used 'iret' to correctly leave interrupts and swap stacks appropriately
        BUG: EOI signal was not being properly sent
                - We were sending the EOI to the wrong port, so the RTC was never receiving it, masking all future RTC interrupts.
                - SOLUTION      : Fixed the ports used in the EOI function so that it was mapped correctly.
        BUG: function pointers to IDT entry functions were not being found by compiler
                - incorrect includes caused the compiler to throw "undefined reference" error to all of our interrupt/exception handlers in the file that initializes IDT
                - SOLUTION      : fix includes, the issue arose from us including a ".S" file in a ".c" file

    3. init devices || i8259.h/.c
                    || rtc.h/.c
                    || kernel.c 
        BUG: not clearing PIC interrupts when initializing
                - we learnedthat gdb was causing interrupts to occur while running the kernel via gdb, resulting in RTC interrupts not being registered properly
                - although PIC interrupts were masked prior to initialization, they were somehow re-enabled after the ICWs were written to this
                - SOLUTION      : re-clear all interrupts after PIC initialization
                                : only enable interrupts for keyboard and RTC after PIC initialization
        BUG: keyboard printing garbage charcters instead of appropriate keys
                - we were indexing into our scancode array by the character pressed (read in as type char) instead of by the decimal equivalent (type unsigned)
                - SOLUTION      : cast the pressed button from char to unsigned when indexing into array
  
    4. init paging  || paging.h/.c
                    || kernel.c
        BUG: Boot loop with global bit undefined
                - any issue regarding paging usually causes a bootloop and we noticed this first when the proper descriptor bits weren't set for the kernel page
                - SOLUTION: In Appendix C it tells you that the kernel needs to be global so we OR'd the Kernel page with the global bit
        BUG: Set directory pages to be 4MiB pages
                - Using the "Understanding the Linux Kernel" book, it explains the set up for the cr3 register and setting the paging bit,
                  however, it doesn't detail setting the directory pages to 4MiB pages
                - SOLUTTION: Set the PSE bit in register cr4 to enable 4MiB

     